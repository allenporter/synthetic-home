# serializer version: 1
# name: test_device_state_to_entity_state[camera-idle]
  list([
    EntityState(domain='binary_sensor', key='motion', state=False),
    EntityState(domain='binary_sensor', key='person', state=False),
    EntityState(domain='binary_sensor', key='sound', state=False),
  ])
# ---
# name: test_device_state_to_entity_state[camera-motion-detected]
  list([
    EntityState(domain='binary_sensor', key='motion', state=True),
  ])
# ---
# name: test_device_state_to_entity_state[camera-person-detected]
  list([
    EntityState(domain='binary_sensor', key='person', state=True),
  ])
# ---
# name: test_device_state_to_entity_state[camera-sound-detected]
  list([
    EntityState(domain='binary_sensor', key='sound', state=True),
  ])
# ---
# name: test_device_state_to_entity_state[door-sensor-battery-low]
  list([
    EntityState(domain='binary_sensor', key='door', state=False),
    EntityState(domain='binary_sensor', key='battery', state=True),
    EntityState(domain='sensor', key='battery', state=10),
  ])
# ---
# name: test_device_state_to_entity_state[door-sensor-closed]
  list([
    EntityState(domain='binary_sensor', key='door', state=False),
    EntityState(domain='sensor', key='battery', state=90),
  ])
# ---
# name: test_device_state_to_entity_state[door-sensor-open]
  list([
    EntityState(domain='binary_sensor', key='door', state=True),
    EntityState(domain='sensor', key='battery', state=90),
  ])
# ---
# name: test_device_state_to_entity_state[exhaust-fan-humid]
  list([
    EntityState(domain='sensor', key='humidity', state=85),
  ])
# ---
# name: test_device_state_to_entity_state[exhaust-fan-off]
  list([
    EntityState(domain='fan', key='exhaust_fan', state={'is_on': False}),
    EntityState(domain='sensor', key='humidity', state=45),
  ])
# ---
# name: test_device_state_to_entity_state[exhaust-fan-on]
  list([
    EntityState(domain='fan', key='exhaust_fan', state={'is_on': True}),
    EntityState(domain='sensor', key='humidity', state=45),
  ])
# ---
# name: test_device_state_to_entity_state[fan-oscilating-off]
  list([
    EntityState(domain='fan', key='osciliating_fan', state={'is_on': False, 'oscillating': False}),
  ])
# ---
# name: test_device_state_to_entity_state[fan-oscilating-on]
  list([
    EntityState(domain='fan', key='osciliating_fan', state={'is_on': True, 'oscillating': False}),
  ])
# ---
# name: test_device_state_to_entity_state[fan-oscilating-oscillating]
  list([
    EntityState(domain='fan', key='osciliating_fan', state={'is_on': True, 'oscillating': True}),
  ])
# ---
# name: test_device_state_to_entity_state[garage-door-closed]
  list([
    EntityState(domain='cover', key='garage-door', state=False),
    EntityState(domain='light', key='light', state=False),
  ])
# ---
# name: test_device_state_to_entity_state[garage-door-open]
  list([
    EntityState(domain='cover', key='garage-door', state=True),
    EntityState(domain='light', key='light', state=True),
  ])
# ---
# name: test_device_state_to_entity_state[gate-closed]
  list([
    EntityState(domain='cover', key='gate', state=False),
  ])
# ---
# name: test_device_state_to_entity_state[gate-open]
  list([
    EntityState(domain='cover', key='gate', state=True),
  ])
# ---
# name: test_device_state_to_entity_state[heat-pump-heating]
  list([
    EntityState(domain='climate', key='heat-pump', state={'hvac_mode': 'heat', 'hvac_action': 'heating', 'current_temperature': 25, 'target_temperature': 27}),
    EntityState(domain='sensor', key='temperature', state=25),
  ])
# ---
# name: test_device_state_to_entity_state[heat-pump-off]
  list([
    EntityState(domain='climate', key='heat-pump', state={'hvac_mode': 'off', 'hvac_action': 'off', 'current_temperature': 22, 'target_temperature': 22}),
    EntityState(domain='sensor', key='temperature', state=22),
  ])
# ---
# name: test_device_state_to_entity_state[hvac-cooling]
  list([
    EntityState(domain='climate', key='hvac', state={'hvac_mode': 'cool', 'hvac_action': 'cooling', 'current_temperature': 25, 'target_temperature': 23}),
    EntityState(domain='sensor', key='temperature', state={'native_value': 25}),
    EntityState(domain='sensor', key='humidity', state={'native_value': 45}),
  ])
# ---
# name: test_device_state_to_entity_state[hvac-off]
  list([
    EntityState(domain='climate', key='hvac', state={'hvac_mode': 'off', 'hvac_action': 'off', 'current_temperature': 22, 'target_temperature': 22}),
    EntityState(domain='sensor', key='temperature', state={'native_value': 22}),
    EntityState(domain='sensor', key='humidity', state={'native_value': 45}),
  ])
# ---
# name: test_device_state_to_entity_state[hvac-very-low]
  list([
    EntityState(domain='climate', key='hvac', state={'hvac_mode': 'cool', 'hvac_action': 'cooling', 'current_temperature': 25, 'target_temperature': 12}),
    EntityState(domain='sensor', key='temperature', state={'native_value': 25}),
    EntityState(domain='sensor', key='humidity', state={'native_value': 45}),
  ])
# ---
# name: test_device_state_to_entity_state[light-dimmable-dim]
  list([
    EntityState(domain='light', key='light-dimmable', state={'brightness': 5}),
  ])
# ---
# name: test_device_state_to_entity_state[light-dimmable-off]
  list([
    EntityState(domain='light', key='light-dimmable', state={'brightness': 0}),
  ])
# ---
# name: test_device_state_to_entity_state[light-dimmable-on]
  list([
    EntityState(domain='light', key='light-dimmable', state={'brightness': 100}),
  ])
# ---
# name: test_device_state_to_entity_state[light-off]
  list([
    EntityState(domain='light', key='light', state='off'),
  ])
# ---
# name: test_device_state_to_entity_state[light-on]
  list([
    EntityState(domain='light', key='light', state='on'),
  ])
# ---
# name: test_device_state_to_entity_state[light-rgbw-off]
  list([
    EntityState(domain='light', key='light-rgbw', state={'rgbw_color': [0, 0, 0, 0]}),
  ])
# ---
# name: test_device_state_to_entity_state[light-rgbw-red]
  list([
    EntityState(domain='light', key='light-rgbw', state={'rgbw_color': [255, 0, 0, 0]}),
  ])
# ---
# name: test_device_state_to_entity_state[light-rgbw-white]
  list([
    EntityState(domain='light', key='light-rgbw', state={'rgbw_color': [0, 0, 0, 255]}),
  ])
# ---
# name: test_device_state_to_entity_state[lock-sensor-locked]
  list([
    EntityState(domain='binary_sensor', key='lock', state=False),
    EntityState(domain='sensor', key='battery', state=90),
  ])
# ---
# name: test_device_state_to_entity_state[lock-sensor-unlocked]
  list([
    EntityState(domain='binary_sensor', key='lock', state=True),
    EntityState(domain='sensor', key='battery', state=90),
  ])
# ---
# name: test_device_state_to_entity_state[motion-sensor-battery-low]
  list([
    EntityState(domain='binary_sensor', key='motion', state=False),
    EntityState(domain='binary_sensor', key='battery', state=True),
    EntityState(domain='sensor', key='battery', state=15),
  ])
# ---
# name: test_device_state_to_entity_state[motion-sensor-off]
  list([
    EntityState(domain='binary_sensor', key='motion', state=False),
    EntityState(domain='sensor', key='battery', state=90),
  ])
# ---
# name: test_device_state_to_entity_state[motion-sensor-on]
  list([
    EntityState(domain='binary_sensor', key='motion', state=True),
    EntityState(domain='sensor', key='battery', state=90),
  ])
# ---
# name: test_device_state_to_entity_state[sensor-zero]
  list([
    EntityState(domain='sensor', key='generic', state={'native_value': 0}),
  ])
# ---
# name: test_device_state_to_entity_state[smart-blinds-closed]
  list([
    EntityState(domain='cover', key='blind', state=False),
    EntityState(domain='sensor', key='battery', state=90),
  ])
# ---
# name: test_device_state_to_entity_state[smart-blinds-open]
  list([
    EntityState(domain='cover', key='blind', state=True),
    EntityState(domain='sensor', key='battery', state=90),
  ])
# ---
# name: test_device_state_to_entity_state[smart-lock-locked]
  list([
    EntityState(domain='lock', key='lock', state='locked'),
    EntityState(domain='binary_sensor', key='lock', state=False),
    EntityState(domain='sensor', key='battery', state=90),
  ])
# ---
# name: test_device_state_to_entity_state[smart-lock-unlocked]
  list([
    EntityState(domain='lock', key='lock', state='unlocked'),
    EntityState(domain='binary_sensor', key='lock', state=True),
    EntityState(domain='sensor', key='battery', state=90),
  ])
# ---
# name: test_device_state_to_entity_state[smart-plug-off]
  list([
    EntityState(domain='switch', key='outlet', state=False),
    EntityState(domain='sensor', key='energy', state=0),
  ])
# ---
# name: test_device_state_to_entity_state[smart-plug-on]
  list([
    EntityState(domain='switch', key='outlet', state=True),
    EntityState(domain='sensor', key='energy', state=1),
  ])
# ---
# name: test_device_state_to_entity_state[smart-speaker-off]
  list([
    EntityState(domain='media_player', key='speaker', state='off'),
  ])
# ---
# name: test_device_state_to_entity_state[smart-speaker-paused]
  list([
    EntityState(domain='media_player', key='speaker', state='paused'),
  ])
# ---
# name: test_device_state_to_entity_state[smart-speaker-playing]
  list([
    EntityState(domain='media_player', key='speaker', state='playing'),
  ])
# ---
# name: test_device_state_to_entity_state[smart-sprinkler-closed]
  list([
    EntityState(domain='valve', key='sprinkler', state='closed'),
  ])
# ---
# name: test_device_state_to_entity_state[smart-sprinkler-open]
  list([
    EntityState(domain='valve', key='sprinkler', state='open'),
  ])
# ---
# name: test_device_state_to_entity_state[smart-tv-off]
  list([
    EntityState(domain='media_player', key='speaker', state='off'),
  ])
# ---
# name: test_device_state_to_entity_state[smart-tv-paused]
  list([
    EntityState(domain='media_player', key='speaker', state='paused'),
  ])
# ---
# name: test_device_state_to_entity_state[smart-tv-playing]
  list([
    EntityState(domain='media_player', key='speaker', state='playing'),
  ])
# ---
# name: test_device_state_to_entity_state[switch-off]
  list([
    EntityState(domain='switch', key='switch', state=False),
  ])
# ---
# name: test_device_state_to_entity_state[switch-on]
  list([
    EntityState(domain='switch', key='switch', state=True),
  ])
# ---
# name: test_device_state_to_entity_state[temperature-sensor-cold]
  list([
    EntityState(domain='sensor', key='temperature', state=38),
    EntityState(domain='sensor', key='humidity', state=60),
  ])
# ---
# name: test_device_state_to_entity_state[temperature-sensor-hot]
  list([
    EntityState(domain='sensor', key='temperature', state=90),
    EntityState(domain='sensor', key='humidity', state=35),
  ])
# ---
# name: test_device_state_to_entity_state[temperature-sensor-mild]
  list([
    EntityState(domain='sensor', key='temperature', state=70),
    EntityState(domain='sensor', key='humidity', state=45),
  ])
# ---
# name: test_device_state_to_entity_state[todo-list-empty]
  list([
    EntityState(domain='todo', key='todo-list', state={'todo_items': []}),
  ])
# ---
# name: test_device_state_to_entity_state[vacuum-cleaning]
  list([
    EntityState(domain='vacuum', key='vacuum', state='cleaning'),
  ])
# ---
# name: test_device_state_to_entity_state[vacuum-off]
  list([
    EntityState(domain='vacuum', key='vacuum', state='docked'),
  ])
# ---
# name: test_device_state_to_entity_state[vacuum-paused]
  list([
    EntityState(domain='vacuum', key='vacuum', state='paused'),
  ])
# ---
# name: test_device_state_to_entity_state[vacuum-returning]
  list([
    EntityState(domain='vacuum', key='vacuum', state='returning'),
  ])
# ---
# name: test_device_state_to_entity_state[water-valve-closed]
  list([
    EntityState(domain='valve', key='water-valve', state={'current_valve_position': 0}),
    EntityState(domain='sensor', key='meter-reading', state=2000),
    EntityState(domain='sensor', key='battery', state=75),
  ])
# ---
# name: test_device_state_to_entity_state[water-valve-open]
  list([
    EntityState(domain='valve', key='water-valve', state={'current_valve_position': 100}),
    EntityState(domain='sensor', key='meter-reading', state=2001),
    EntityState(domain='sensor', key='battery', state=75),
  ])
# ---
# name: test_device_state_to_entity_state[weather-service-cloudy]
  list([
    EntityState(domain='weather', key='weather', state={'condition': 'cloudy', 'native_temperature': 60, 'humidity': 70, 'native_wind_speed': 10}),
  ])
# ---
# name: test_device_state_to_entity_state[weather-service-cold]
  list([
    EntityState(domain='weather', key='weather', state={'condition': 'partlycloudy', 'native_temperature': 20, 'humidity': 60, 'native_wind_speed': 5}),
  ])
# ---
# name: test_device_state_to_entity_state[weather-service-fair]
  list([
    EntityState(domain='weather', key='weather', state={'condition': 'sunny', 'native_temperature': 72, 'humidity': 60, 'native_wind_speed': 5}),
  ])
# ---
# name: test_device_state_to_entity_state[weather-service-hot]
  list([
    EntityState(domain='weather', key='weather', state={'condition': 'sunny', 'native_temperature': 90, 'humidity': 40, 'native_wind_speed': 10}),
  ])
# ---
# name: test_device_state_to_entity_state[weather-service-rainy]
  list([
    EntityState(domain='weather', key='weather', state={'condition': 'rainy', 'native_temperature': 50, 'humidity': 80, 'native_wind_speed': 15}),
  ])
# ---
# name: test_device_state_to_entity_state[weather-service-snowy]
  list([
    EntityState(domain='weather', key='weather', state={'condition': 'snowy', 'native_temperature': 32, 'humidity': 90, 'native_wind_speed': 20}),
  ])
# ---
# name: test_device_state_to_entity_state[weather-service-windy]
  list([
    EntityState(domain='weather', key='weather', state={'condition': 'windy', 'native_temperature': 65, 'humidity': 50, 'native_wind_speed': 30}),
  ])
# ---
# name: test_device_state_to_entity_state[window-sensor-battery-low]
  list([
    EntityState(domain='binary_sensor', key='window', state=False),
    EntityState(domain='binary_sensor', key='battery', state=True),
    EntityState(domain='sensor', key='battery', state=10),
  ])
# ---
# name: test_device_state_to_entity_state[window-sensor-closed]
  list([
    EntityState(domain='binary_sensor', key='window', state=False),
    EntityState(domain='sensor', key='battery', state=90),
  ])
# ---
# name: test_device_state_to_entity_state[window-sensor-open]
  list([
    EntityState(domain='binary_sensor', key='window', state=True),
    EntityState(domain='sensor', key='battery', state=90),
  ])
# ---
